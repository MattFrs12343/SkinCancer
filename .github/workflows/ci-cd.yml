name: 🚀 OncoDerma CI/CD Pipeline

# 🎯 TRIGGER: Se ejecuta en cada commit
on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

# 🔧 Variables de entorno
env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  # 📋 Job 1: Análisis y Testing del Frontend
  frontend-tests:
    name: 🎨 Frontend Tests & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📦 Instalar dependencias Frontend
      working-directory: ./frontend
      run: |
        npm ci
        
    - name: 🔍 Lint Frontend
      working-directory: ./frontend
      run: |
        npm run lint
        
    - name: 🏗️ Build Frontend
      working-directory: ./frontend
      run: |
        npm run build
        
    - name: 📤 Upload Frontend Build
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/
        retention-days: 7

  # 🐍 Job 2: Testing del Backend
  backend-tests:
    name: 🔧 Backend Tests & Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Instalar dependencias Backend
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔍 Lint Backend (flake8)
      working-directory: ./backend
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        
    - name: ✅ Validar sintaxis Python
      working-directory: ./backend
      run: |
        python -m py_compile app/main.py
        python -c "import app.main; print('✅ Backend syntax OK')"

  # 🚀 Job 3: Deploy Notification
  deploy-notification:
    name: 📢 Deploy Notification
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 📊 Generar reporte de deploy
      run: |
        echo "🎉 Deploy exitoso para OncoDerma!"
        echo "📅 Fecha: $(date)"
        echo "👤 Usuario: ${{ github.actor }}"
        echo "📝 Commit: ${{ github.sha }}"
        echo "🌿 Rama: ${{ github.ref_name }}"
        echo "💬 Mensaje: ${{ github.event.head_commit.message }}"
        
    - name: 📋 Crear summary
      run: |
        echo "## 🚀 Deploy Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Campo | Valor |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| 📅 Fecha | $(date) |" >> $GITHUB_STEP_SUMMARY
        echo "| 👤 Usuario | ${{ github.actor }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🌿 Rama | ${{ github.ref_name }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 📝 Commit | \`${{ github.sha }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| 💬 Mensaje | ${{ github.event.head_commit.message }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Jobs Completados:" >> $GITHUB_STEP_SUMMARY
        echo "- 🎨 Frontend: Build y tests" >> $GITHUB_STEP_SUMMARY
        echo "- 🔧 Backend: Validación y lint" >> $GITHUB_STEP_SUMMARY
        echo "- 📢 Notificación: Deploy exitoso" >> $GITHUB_STEP_SUMMARY

  # 🔄 Job 4: Auto-update dependencies (solo los lunes)
  dependency-update:
    name: 🔄 Dependency Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[deps]'))
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: 🔍 Check outdated packages
      working-directory: ./frontend
      run: |
        npm outdated || true
        echo "📋 Dependency check completed"

# 📅 Trigger adicional: Ejecutar dependency check los lunes
on:
  schedule:
    - cron: '0 9 * * 1'  # Lunes a las 9 AM UTC